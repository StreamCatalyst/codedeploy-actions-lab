name: Build and Deploy
on: { workflow_dispatch: {} }

env:
  AWS_REGION: ca-central-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-c95brnwz9iro

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sanity check paths
        run: |
          pwd
          ls -la
          ls -la spring-boot-hello-world-example || true

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build Spring Boot (WAR)
        run: |
          mvn -v
          mvn -q -DskipTests -f spring-boot-hello-world-example/pom.xml package
          ls -l spring-boot-hello-world-example/target

      - name: Upload WAR to S3
        run: |
          aws s3 cp spring-boot-hello-world-example/target/*.war s3://${{ env.S3BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create CodeDeploy deployment from GitHub commit
        run: |
          commit_hash=$(git rev-parse HEAD)
          aws deploy create-deployment \
            --application-name CodeDeployAppNameWithASG \
            --deployment-group-name CodeDeployGroupName \
            --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash \
            --ignore-application-stop-failures
